#! /bin/bash
#create by beshoy semsem

function createProject {
if test -d projects/$1
then
$(zenity --error  --title="Reacter | Error" --text="you have project as same name. please choose onther name")
else
mkdir -p projects/$1
cd projects/$1
mkdir /src
touch package.json
touch webpack.config.js
mkdir src/actions
mkdir src/components
mkdir src/containers
mkdir src/reducers
touch src/reducers/index.js
touch src/store.js
touch src/Main.js
mkdir -p dist/js
touch dist/index.html
packageName=$1
packageName=${packageName// /_}
packageName=`echo "${packageName}" | tr '[A-Z]' '[a-z]'`
# add package.json body#
cat <<EOT >> package.json
{
  "name": "$packageName",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "node_modules/.bin/webpack-dev-server"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "babel-core": "^6.17.0",
    "babel-loader": "^6.2.5",
    "babel-plugin-transform-decorators": "^6.13.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-preset-es2015": "^6.16.0",
    "babel-preset-react": "^6.16.0",
    "react": "^15.3.2",
    "react-dom": "^15.3.2",
    "webpack": "^1.13.2",
    "webpack-dev-server": "^1.16.2"
  },
  "dependencies": {
    "react-redux": "^4.4.6",
    "redux": "^3.6.0",
    "redux-logger": "^2.7.4",
    "redux-promise-middleware": "^4.2.0",
    "redux-thunk": "^2.1.0"
  }
}
EOT

# add bower.json body#
cat <<EOT >> bower.json
{
  "name": "$packageName",
  "homepage": "",
  "description": "Control Panel",
  "license": "MIT",
  "devDependencies": {
    "jquery": "^2.2.3",
    "bootstrap": "^3.3.7",
    "font-awesome": "fontawesome#^4.6.1"
  }
}
EOT

# add bowerrc body#
cat <<EOT >> .bowerrc
{
  "directory" : "dist/vendors"
}
EOT

# add store.js body#
cat <<EOT >> webpack.config.js
var config = {
    entry: "./src/Main.js",

    output: {
        filename:"./dist/js/app.js"
    },

    devServer: {
        inline: true,
        port: 8000
    },

    module: {
        loaders: [{
            test: /\.jsx?$/,
            exclude: /node_modules/,
            loader: "babel",

            query: {
                presets: ["es2015", "react"],
                plugins:["transform-decorators-legacy"]
            }
        }]
    }
};

module.exports = config;
EOT


# add store.js body#
cat <<EOT >> src/store.js
import {createStore,applyMiddleware} from "redux"
import logger from 'redux-logger';
import thunk from 'redux-thunk';
import promise from 'redux-promise-middleware';
import reducers from './reducers';

const middleware=applyMiddleware(promise(),thunk,logger());

export default createStore(reducers,middleware);
EOT
# ================ #

# add reducers body#
cat <<EOT >> src/reducers/index.js
import {
    combineReducers
} from 'redux';
// reducers files
// end imports 
export default combineReducers({
    // end reducers object
})
EOT
# ================ #


# add Main.js body#
cat <<EOT >> src/Main.js
import React from "react";
import ReactDOM from "react-dom";
import Main from "./components/Main";
import {Provider} from 'react-redux';
import store from './store';
ReactDOM.render(
    <Provider store={store}>
        <Main/>
    </Provider>
,document.getElementById("app"));
EOT
# ================ #

# add index.js body#
cat <<EOT >> dist/index.html
<html>
 <head>
     <title>$1 | Reacter </title>
 </head>

 <body>
     <div id="app">My APP</div>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
     <script src="./js/app.js"></script>
 </body>

</html>

EOT
# ================ #

# add main component body#
cat <<EOT >> src/components/Main.js
import React from "react";
import {connect} from 'react-redux';
// end imports

@connect((store)=>{
    return{
        // each key in this object will pass to component as props
    };
})
class Main extends React.Component{
    render (){        
        return (
            <div> $1 | Reacter Application </div>
        )
    }
}

module.exports=Main;

EOT
# ================ #

cd src
$(zenity --info  --title="Reacter | Info" --text="$1 project has created successfully")
fi
}
